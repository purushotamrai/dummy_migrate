# A "migration" is, in technical terms, a plugin whose configuration describes
# how to read source data, process it (generally by mapping source fields to
# destination fields), and write it to Drupal.

# The machine name for a migration, used to uniquely identify it.
id: file

# A human-friendly description of the migration.
label: Migrate files from Drupal 7

# The machine name of the group containing this migration (which contains shared
# configuration to be merged with our own configuration here).
migration_group: content

# Every migration must have a source plugin, which controls the delivery of our
# source data. In this case, our source plugin has the name "beer_term", which
# Drupal resolves to the PHP class defined in
# src/Plugin/migrate/source/BeerTerm.php.
source:
  plugin: url
  # Specifies the xml parser plugin.
  data_parser_plugin: xml
  # For XML, item_selector is the xpath used to select our source items (tags in this case).
  # For JSON, this would be an integer depth at which importable items are found.
  item_selector: /result
  fields:
      -
        name: fid
        label: Legacy file Id
        selector: fid
      -
        name: uri_full
        label: Full Url
        selector: uri_full
      -
        name: uri
        label: Uri
        selector: uri
  ids:
    fid:
      type: string
  urls:
    - http://d.7/api/file/1.xml
    - http://d.7/api/file/2.xml
    - http://d.7/api/file/3.xml
    - http://d.7/api/file/4.xml
    - http://d.7/api/file/5.xml
    - http://d.7/api/file/6.xml
    - http://d.7/api/file/7.xml
    - http://d.7/api/file/8.xml
    - http://d.7/api/file/9.xml
    - http://d.7/api/file/10.xml
    - http://d.7/api/file/11.xml
    - http://d.7/api/file/12.xml
    - http://d.7/api/file/13.xml
    - http://d.7/api/file/14.xml
    - http://d.7/api/file/15.xml
    - http://d.7/api/file/16.xml
    - http://d.7/api/file/17.xml
    - http://d.7/api/file/18.xml
    - http://d.7/api/file/19.xml
    - http://d.7/api/file/20.xml
    - http://d.7/api/file/21.xml
    - http://d.7/api/file/22.xml
    - http://d.7/api/file/23.xml
    - http://d.7/api/file/24.xml
# Every migration must also have a destination plugin, which handles writing
# the migrated data in the appropriate form for that particular kind of data.
# Most Drupal content is an "entity" of one type or another, and we need to
# specify what entity type we are populating (in this case, taxonomy terms).
# Unlike the source plugin (which is specific to our particular scenario), this
# destination plugin is implemented in Drupal itself.
destination:
  plugin: entity:file

# Here's the meat of the migration - the processing pipeline. This describes how
# each destination field is to be populated based on the source data. For each
# destination field, one or more process plugins may be invoked.
process:
  # Construct the full path of each source file from the provided directory and the individual path,
  # encoding it according to RFC-3986.
  source_full_path: uri_full
  # Copy the file to the desired Drupal destination (usually public://...).
  uri:
    plugin: file_copy
    source:
      - '@source_full_path'
      - uri

# We'll learn more about dependencies in beer_node - here, we leave them empty.
migration_dependencies: {}

# By default, configuration entities (like this migration) are not automatically
# removed when the migration which installed them is uninstalled. To have your
# migrations uninstalled with your migration module, add an enforced dependency
# on your module.
dependencies:
  enforced:
    module:
      - dummy_migrate
